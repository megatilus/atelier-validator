// Klib ABI Dump
// Targets: [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, wasmJs, wasmWasi]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <dev.megatilus.atelier:validator-kotlinx-datetime>
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Duration>).dev.megatilus.atelier.validator/isAtLeast(kotlin.time/Duration, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Duration> // dev.megatilus.atelier.validator/isAtLeast|isAtLeast@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.time.Duration>(kotlin.time.Duration;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Duration>).dev.megatilus.atelier.validator/isAtMost(kotlin.time/Duration, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Duration> // dev.megatilus.atelier.validator/isAtMost|isAtMost@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.time.Duration>(kotlin.time.Duration;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Duration>).dev.megatilus.atelier.validator/isBetween(kotlin.time/Duration, kotlin.time/Duration, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Duration> // dev.megatilus.atelier.validator/isBetween|isBetween@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.time.Duration>(kotlin.time.Duration;kotlin.time.Duration;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Duration>).dev.megatilus.atelier.validator/isNegative(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Duration> // dev.megatilus.atelier.validator/isNegative|isNegative@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.time.Duration>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Duration>).dev.megatilus.atelier.validator/isPositive(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Duration> // dev.megatilus.atelier.validator/isPositive|isPositive@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.time.Duration>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Duration?>).dev.megatilus.atelier.validator/isAtLeast(kotlin.time/Duration, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Duration?> // dev.megatilus.atelier.validator/isAtLeast|isAtLeast@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.time.Duration?>(kotlin.time.Duration;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Duration?>).dev.megatilus.atelier.validator/isAtMost(kotlin.time/Duration, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Duration?> // dev.megatilus.atelier.validator/isAtMost|isAtMost@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.time.Duration?>(kotlin.time.Duration;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Duration?>).dev.megatilus.atelier.validator/isBetween(kotlin.time/Duration, kotlin.time/Duration, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Duration?> // dev.megatilus.atelier.validator/isBetween|isBetween@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.time.Duration?>(kotlin.time.Duration;kotlin.time.Duration;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Duration?>).dev.megatilus.atelier.validator/isNegative(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Duration?> // dev.megatilus.atelier.validator/isNegative|isNegative@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.time.Duration?>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Duration?>).dev.megatilus.atelier.validator/isPositive(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Duration?> // dev.megatilus.atelier.validator/isPositive|isPositive@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.time.Duration?>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Instant>).dev.megatilus.atelier.validator/isAfter(kotlin.time/Instant, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Instant> // dev.megatilus.atelier.validator/isAfter|isAfter@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.time.Instant>(kotlin.time.Instant;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Instant>).dev.megatilus.atelier.validator/isBefore(kotlin.time/Instant, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Instant> // dev.megatilus.atelier.validator/isBefore|isBefore@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.time.Instant>(kotlin.time.Instant;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Instant>).dev.megatilus.atelier.validator/isFuture(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Instant> // dev.megatilus.atelier.validator/isFuture|isFuture@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.time.Instant>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Instant>).dev.megatilus.atelier.validator/isPast(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Instant> // dev.megatilus.atelier.validator/isPast|isPast@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.time.Instant>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Instant>).dev.megatilus.atelier.validator/isWithinNext(kotlin.time/Duration, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Instant> // dev.megatilus.atelier.validator/isWithinNext|isWithinNext@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.time.Instant>(kotlin.time.Duration;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Instant>).dev.megatilus.atelier.validator/isWithinPast(kotlin.time/Duration, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Instant> // dev.megatilus.atelier.validator/isWithinPast|isWithinPast@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.time.Instant>(kotlin.time.Duration;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Instant?>).dev.megatilus.atelier.validator/isAfter(kotlin.time/Instant, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Instant?> // dev.megatilus.atelier.validator/isAfter|isAfter@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.time.Instant?>(kotlin.time.Instant;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Instant?>).dev.megatilus.atelier.validator/isBefore(kotlin.time/Instant, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Instant?> // dev.megatilus.atelier.validator/isBefore|isBefore@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.time.Instant?>(kotlin.time.Instant;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Instant?>).dev.megatilus.atelier.validator/isFuture(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Instant?> // dev.megatilus.atelier.validator/isFuture|isFuture@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.time.Instant?>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Instant?>).dev.megatilus.atelier.validator/isPast(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Instant?> // dev.megatilus.atelier.validator/isPast|isPast@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.time.Instant?>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Instant?>).dev.megatilus.atelier.validator/isWithinNext(kotlin.time/Duration, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Instant?> // dev.megatilus.atelier.validator/isWithinNext|isWithinNext@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.time.Instant?>(kotlin.time.Duration;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Instant?>).dev.megatilus.atelier.validator/isWithinPast(kotlin.time/Duration, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin.time/Instant?> // dev.megatilus.atelier.validator/isWithinPast|isWithinPast@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.time.Instant?>(kotlin.time.Duration;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin/String>).dev.megatilus.atelier.validator/isValidIsoDate(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin/String> // dev.megatilus.atelier.validator/isValidIsoDate|isValidIsoDate@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.String>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin/String>).dev.megatilus.atelier.validator/isValidIsoDateTime(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin/String> // dev.megatilus.atelier.validator/isValidIsoDateTime|isValidIsoDateTime@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.String>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin/String>).dev.megatilus.atelier.validator/isValidIsoInstant(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin/String> // dev.megatilus.atelier.validator/isValidIsoInstant|isValidIsoInstant@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.String>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin/String?>).dev.megatilus.atelier.validator/isValidIsoDate(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin/String?> // dev.megatilus.atelier.validator/isValidIsoDate|isValidIsoDate@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.String?>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin/String?>).dev.megatilus.atelier.validator/isValidIsoDateTime(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin/String?> // dev.megatilus.atelier.validator/isValidIsoDateTime|isValidIsoDateTime@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.String?>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin/String?>).dev.megatilus.atelier.validator/isValidIsoInstant(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlin/String?> // dev.megatilus.atelier.validator/isValidIsoInstant|isValidIsoInstant@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlin.String?>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate>).dev.megatilus.atelier.validator/ageAtLeast(kotlin/Int, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate> // dev.megatilus.atelier.validator/ageAtLeast|ageAtLeast@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDate>(kotlin.Int;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate>).dev.megatilus.atelier.validator/ageAtMost(kotlin/Int, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate> // dev.megatilus.atelier.validator/ageAtMost|ageAtMost@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDate>(kotlin.Int;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate>).dev.megatilus.atelier.validator/ageBetween(kotlin/Int, kotlin/Int, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate> // dev.megatilus.atelier.validator/ageBetween|ageBetween@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDate>(kotlin.Int;kotlin.Int;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate>).dev.megatilus.atelier.validator/isAfter(kotlinx.datetime/LocalDate, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate> // dev.megatilus.atelier.validator/isAfter|isAfter@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDate>(kotlinx.datetime.LocalDate;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate>).dev.megatilus.atelier.validator/isBefore(kotlinx.datetime/LocalDate, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate> // dev.megatilus.atelier.validator/isBefore|isBefore@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDate>(kotlinx.datetime.LocalDate;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate>).dev.megatilus.atelier.validator/isBetween(kotlinx.datetime/LocalDate, kotlinx.datetime/LocalDate, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate> // dev.megatilus.atelier.validator/isBetween|isBetween@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDate>(kotlinx.datetime.LocalDate;kotlinx.datetime.LocalDate;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate>).dev.megatilus.atelier.validator/isFuture(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate> // dev.megatilus.atelier.validator/isFuture|isFuture@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDate>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate>).dev.megatilus.atelier.validator/isFutureOrToday(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate> // dev.megatilus.atelier.validator/isFutureOrToday|isFutureOrToday@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDate>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate>).dev.megatilus.atelier.validator/isPast(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate> // dev.megatilus.atelier.validator/isPast|isPast@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDate>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate>).dev.megatilus.atelier.validator/isPastOrToday(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate> // dev.megatilus.atelier.validator/isPastOrToday|isPastOrToday@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDate>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate>).dev.megatilus.atelier.validator/isToday(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate> // dev.megatilus.atelier.validator/isToday|isToday@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDate>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate?>).dev.megatilus.atelier.validator/ageAtMost(kotlin/Int, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate?> // dev.megatilus.atelier.validator/ageAtMost|ageAtMost@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDate?>(kotlin.Int;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate?>).dev.megatilus.atelier.validator/ageBetween(kotlin/Int, kotlin/Int, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate?> // dev.megatilus.atelier.validator/ageBetween|ageBetween@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDate?>(kotlin.Int;kotlin.Int;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate?>).dev.megatilus.atelier.validator/isBetween(kotlinx.datetime/LocalDate, kotlinx.datetime/LocalDate, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate?> // dev.megatilus.atelier.validator/isBetween|isBetween@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDate?>(kotlinx.datetime.LocalDate;kotlinx.datetime.LocalDate;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate?>).dev.megatilus.atelier.validator/isFuture(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate?> // dev.megatilus.atelier.validator/isFuture|isFuture@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDate?>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate?>).dev.megatilus.atelier.validator/isFutureOrToday(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate?> // dev.megatilus.atelier.validator/isFutureOrToday|isFutureOrToday@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDate?>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate?>).dev.megatilus.atelier.validator/isPast(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate?> // dev.megatilus.atelier.validator/isPast|isPast@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDate?>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate?>).dev.megatilus.atelier.validator/isPastOrToday(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate?> // dev.megatilus.atelier.validator/isPastOrToday|isPastOrToday@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDate?>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate?>).dev.megatilus.atelier.validator/isToday(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDate?> // dev.megatilus.atelier.validator/isToday|isToday@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDate?>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDateTime>).dev.megatilus.atelier.validator/isAfter(kotlinx.datetime/LocalDateTime, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDateTime> // dev.megatilus.atelier.validator/isAfter|isAfter@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDateTime>(kotlinx.datetime.LocalDateTime;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDateTime>).dev.megatilus.atelier.validator/isBefore(kotlinx.datetime/LocalDateTime, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDateTime> // dev.megatilus.atelier.validator/isBefore|isBefore@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDateTime>(kotlinx.datetime.LocalDateTime;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDateTime>).dev.megatilus.atelier.validator/isFuture(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDateTime> // dev.megatilus.atelier.validator/isFuture|isFuture@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDateTime>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDateTime>).dev.megatilus.atelier.validator/isPast(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDateTime> // dev.megatilus.atelier.validator/isPast|isPast@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDateTime>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDateTime?>).dev.megatilus.atelier.validator/isAfter(kotlinx.datetime/LocalDateTime, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDateTime?> // dev.megatilus.atelier.validator/isAfter|isAfter@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDateTime?>(kotlinx.datetime.LocalDateTime;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDateTime?>).dev.megatilus.atelier.validator/isBefore(kotlinx.datetime/LocalDateTime, kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDateTime?> // dev.megatilus.atelier.validator/isBefore|isBefore@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDateTime?>(kotlinx.datetime.LocalDateTime;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDateTime?>).dev.megatilus.atelier.validator/isFuture(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDateTime?> // dev.megatilus.atelier.validator/isFuture|isFuture@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDateTime?>(kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDateTime?>).dev.megatilus.atelier.validator/isPast(kotlin/String? = ...): dev.megatilus.atelier.builders/FieldValidatorBuilder<#A, kotlinx.datetime/LocalDateTime?> // dev.megatilus.atelier.validator/isPast|isPast@dev.megatilus.atelier.builders.FieldValidatorBuilder<0:0,kotlinx.datetime.LocalDateTime?>(kotlin.String?){0§<kotlin.Any>}[0]
final fun dev.megatilus.atelier.validator/calculateAge(kotlinx.datetime/LocalDate, kotlinx.datetime/LocalDate = ...): kotlin/Int // dev.megatilus.atelier.validator/calculateAge|calculateAge(kotlinx.datetime.LocalDate;kotlinx.datetime.LocalDate){}[0]
final fun dev.megatilus.atelier.validator/parseIsoDate(kotlin/String): kotlinx.datetime/LocalDate? // dev.megatilus.atelier.validator/parseIsoDate|parseIsoDate(kotlin.String){}[0]
final fun dev.megatilus.atelier.validator/parseIsoDateTime(kotlin/String): kotlinx.datetime/LocalDateTime? // dev.megatilus.atelier.validator/parseIsoDateTime|parseIsoDateTime(kotlin.String){}[0]
final fun dev.megatilus.atelier.validator/parseIsoInstant(kotlin/String): kotlin.time/Instant? // dev.megatilus.atelier.validator/parseIsoInstant|parseIsoInstant(kotlin.String){}[0]
